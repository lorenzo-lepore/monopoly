/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.monopoly.gui.frames;

import com.monopoly.app.GestoreContratti;
import com.monopoly.app.GestoreGiocatori;
import com.monopoly.app.GestorePartita;
import com.monopoly.app.GestorePedine;
import com.monopoly.app.InizializzatorePartita;
import com.monopoly.gui.panels.GameboardPanel;
import com.monopoly.gui.panels.PrisonPanel;
import java.awt.Dimension;
import java.io.Serializable;

/**
 *
 * @author Lorenzo Lepore - Matricola: 172416
 */
public class GameboardFrame extends javax.swing.JFrame implements Serializable{

    private GameboardPanel gameboardPanel;
    private PrisonPanel prisonPanel;
    private GestoreGiocatori gestoreGiocatori;
    private GestoreContratti gestoreContratti;
    private GestorePedine gestorePedine;
    private GestorePartita gestorePartita;
    
    
    /**
     * Creates new form GameboardFrame
     * @param gestoreGiocatori
     * @param gestoreContratti
     * @param gestorePedine
     * @param gestorePartita
     */
    public GameboardFrame(
            GestoreGiocatori gestoreGiocatori, 
            GestoreContratti gestoreContratti, 
            GestorePedine gestorePedine, 
            GestorePartita gestorePartita
        ) {
        
        initComponents();
       
        this.gestoreGiocatori = gestoreGiocatori;
        this.gestoreContratti = gestoreContratti;
        this.gestorePedine = gestorePedine;
        this.gestorePartita = gestorePartita;
        
        Integer[] ordine = this.gestorePartita.getOrdineGiocatori();
                
        this.setTitle("Monopoly");
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);

        this.gameboardPanel = new GameboardPanel(
                this, 
                this.gestoreGiocatori,
                this.gestoreContratti,
                this.gestorePedine,
                this.gestorePartita
        );
        
        this.setContentPane(this.gameboardPanel);
        this.setMinimumSize(new Dimension(1312,738));
        this.setExtendedState(GameboardFrame.MAXIMIZED_BOTH);
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new GameboardFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
