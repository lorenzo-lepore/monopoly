/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.monopoly.gui.panels;

import com.monopoly.app.GestoreContratti;
import com.monopoly.app.GestoreGiocatori;
import com.monopoly.app.GestorePartita;
import com.monopoly.app.GestorePedine;
import com.monopoly.app.InizializzatorePartita;
import com.monopoly.gui.frames.GameboardFrame;
import com.monopoly.gui.frames.NewPlayerFrame;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Lorenzo Lepore - Matricola: 172416
 */
@SuppressWarnings("SpellCheckingInspection")
public class MainPanel extends javax.swing.JPanel {

    private final JFrame actualFrame;
    private final GestoreGiocatori gestoreGiocatori;
    private final GestoreContratti gestoreContratti;
    private final GestorePedine gestorePedine;
    private final InizializzatorePartita inizializzatorePartita;
    private final GestorePartita gestorePartita;
    
    /**
     * Creates new form MainPanel
     * @param givenFrame
     * @param gestoreGiocatori
     * @param gestoreContratti
     * @param gestorePedine
     * @param inizializzatorePartita
     * @param gestorePartita
     */
    public MainPanel(JFrame givenFrame, GestoreGiocatori gestoreGiocatori,GestoreContratti gestoreContratti, GestorePedine gestorePedine, InizializzatorePartita inizializzatorePartita, GestorePartita gestorePartita) {
        
        initComponents();
        
        this.actualFrame = givenFrame;
        this.gestoreGiocatori = gestoreGiocatori;
        this.gestoreContratti = gestoreContratti;
        this.gestorePedine = gestorePedine;
        this.inizializzatorePartita = inizializzatorePartita;
        this.gestorePartita = gestorePartita;
        
        
        // Pulsante 'Nuova partita'
        this.nuovaPartitaButton.addActionListener(
                actionEvent -> {
                    if(gestoreGiocatori.getNumeroGiocatori() >= 2) {
                        this.handleNuovaPartita();
                    } else {
                        JOptionPane.showMessageDialog(
                                actualFrame, 
                                "Numero di giocatori richiesto: 2",
                                "Numero giocatori insufficiente",
                                JOptionPane.ERROR_MESSAGE
                        );
                    }
                }
        );
        
        // Pulsante 'Riprendi partita'
        this.riprendiPartitaButton.addActionListener(
                actionEvent -> {
                    this.handleRiprendiPartita();
                }
        );
        
        // Pulsante 'Aggiungi giocatore'
        this.aggiungiGiocatoreButton.addActionListener(
                actionEvent -> {
                    this.handleAggiungiGiocatore();
                }
        );
        
        // Pulsante 'Mostra giocatori'
        this.mostraGiocatoriButton.addActionListener(
                actionEvent -> {
                    
                    if(gestoreGiocatori.getGiocatori().isEmpty()){
                        JOptionPane.showMessageDialog(
                            actualFrame, 
                            "Lista giocatori vuota",
                            "Lista giocatori", 
                            JOptionPane.INFORMATION_MESSAGE
                        );
                    } else {
                        JOptionPane.showMessageDialog(
                            actualFrame, 
                            gestoreGiocatori.toString(),
                            "Lista giocatori", 
                            JOptionPane.INFORMATION_MESSAGE
                        );
                    }
                    
                    
                    
                }
        );
        
        // Pulsante 'Esci dal gioco'
        this.exitButton.addActionListener(
                actionEvent -> {
                    System.exit(0);
                }
        );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        nuovaPartitaButton = new javax.swing.JButton();
        riprendiPartitaButton = new javax.swing.JButton();
        aggiungiGiocatoreButton = new javax.swing.JButton();
        mostraGiocatoriButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 204));
        setName(""); // NOI18N

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logo.png"))); // NOI18N
        jLabel1.setToolTipText("");

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        nuovaPartitaButton.setText("Nuova partita");
        nuovaPartitaButton.setAlignmentY(0.0F);
        nuovaPartitaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuovaPartitaButtonActionPerformed(evt);
            }
        });

        riprendiPartitaButton.setText("Riprendi partita");
        riprendiPartitaButton.setAlignmentY(0.0F);
        riprendiPartitaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                riprendiPartitaButtonActionPerformed(evt);
            }
        });

        aggiungiGiocatoreButton.setText("Aggiungi giocatore");
        aggiungiGiocatoreButton.setAlignmentY(0.0F);
        aggiungiGiocatoreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aggiungiGiocatoreButtonActionPerformed(evt);
            }
        });

        mostraGiocatoriButton.setText("Mostra giocatori");
        mostraGiocatoriButton.setAlignmentY(0.0F);
        mostraGiocatoriButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostraGiocatoriButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Esci dal gioco");
        exitButton.setAlignmentY(0.0F);
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nuovaPartitaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(riprendiPartitaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aggiungiGiocatoreButton, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mostraGiocatoriButton, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addComponent(nuovaPartitaButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(riprendiPartitaButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(aggiungiGiocatoreButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(mostraGiocatoriButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(exitButton)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(114, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(114, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exitButtonActionPerformed

    private void mostraGiocatoriButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostraGiocatoriButtonActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_mostraGiocatoriButtonActionPerformed

    private void aggiungiGiocatoreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aggiungiGiocatoreButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aggiungiGiocatoreButtonActionPerformed

    private void riprendiPartitaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_riprendiPartitaButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_riprendiPartitaButtonActionPerformed

    private void nuovaPartitaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuovaPartitaButtonActionPerformed

    }//GEN-LAST:event_nuovaPartitaButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aggiungiGiocatoreButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton mostraGiocatoriButton;
    private javax.swing.JButton nuovaPartitaButton;
    private javax.swing.JButton riprendiPartitaButton;
    // End of variables declaration//GEN-END:variables
   
    private void handleAggiungiGiocatore() {
        if (this.gestoreGiocatori.getNumeroGiocatori() == 6) {
            JOptionPane.showMessageDialog(
                        actualFrame,
                        "Capienza massima di inserimento superata.",
                        "Errore",
                        JOptionPane.ERROR_MESSAGE
                );
        } else {
            NewPlayerFrame newPlayerFrame = new NewPlayerFrame(this.gestoreGiocatori,this.gestorePedine);
            newPlayerFrame.setVisible(true);
        }
    }
    
    private void handleNuovaPartita() {
        this.inizializzatorePartita.AssegnazioneContratti();
        this.inizializzatorePartita.AssegnazioneDenaro();
        this.gestorePartita.setOrdineGiocatori(this.inizializzatorePartita.AssegnazioneOrdineGiocatori());
        
        this.actualFrame.dispose();
        
        GameboardFrame gameboardFrame = new GameboardFrame(this.gestoreGiocatori, this.gestoreContratti, this.gestorePedine, this.gestorePartita); 
        gameboardFrame.setVisible(true);
    }
    
    private void handleRiprendiPartita() {
        try {
            GameboardFrame gameboardFrame = new GameboardFrame(this.gestoreGiocatori.loadGestoreGiocatori(), this.gestoreContratti.loadGestoreContratti(), this.gestorePedine.loadGestorePedine(), this.gestorePartita.loadGestorePartita());
            this.actualFrame.dispose();
            gameboardFrame.setVisible(true);
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(
                    actualFrame,
                    "Nessuna partita trovata.",
                    "Errore",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }
}
