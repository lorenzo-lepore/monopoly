/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.monopoly.gui.panels;

import com.monopoly.app.GestoreGiocatori;
import com.monopoly.app.GestorePedine;
import com.monopoly.app.Giocatore;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Lorenzo Lepore - Matricola: 172416
 */
public class NewPlayerPanel extends javax.swing.JPanel {

    private final JFrame actualFrame;
    private final GestoreGiocatori gestoreGiocatori;
    private final GestorePedine gestorePedine;
    /**
     * Creates new form NewPlayerPanel
     * @param givenFrame
     * @param gestoreGiocatori
     * @param gestorePedine
     */
    public NewPlayerPanel(JFrame givenFrame, GestoreGiocatori gestoreGiocatori, GestorePedine gestorePedine) {
        
        initComponents();
        this.actualFrame = givenFrame;
        this.gestoreGiocatori = gestoreGiocatori;
        this.gestorePedine = gestorePedine;
        
        // Pulsante 'Annulla'
        this.annullaButton.addActionListener(
            actionEvent -> {
                   this.handleAnnullaButton();
            }
        );
        
        // Pulsante 'Inserisci'
        this.inserisciGiocatoreButton.addActionListener(
                actionEvent -> {
                    this.handleInserisciButton(gestoreGiocatori);
                }
        );
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nomeTextField = new javax.swing.JTextField();
        pedineComboBox = new javax.swing.JComboBox<>();
        inserisciGiocatoreButton = new javax.swing.JButton();
        annullaButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setText("Nome");

        jLabel2.setText("Pedina");

        nomeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeTextFieldActionPerformed(evt);
            }
        });

        pedineComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cane", "Cilindro", "Carriola", "Macchina", "Nave", "Stivale" }));
        pedineComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pedineComboBoxActionPerformed(evt);
            }
        });

        inserisciGiocatoreButton.setText("Inserisci");

        annullaButton.setText("Annulla");
        annullaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annullaButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(annullaButton, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inserisciGiocatoreButton, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomeTextField)
                            .addComponent(pedineComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nomeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pedineComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inserisciGiocatoreButton)
                    .addComponent(annullaButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void annullaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annullaButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_annullaButtonActionPerformed

    private void pedineComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pedineComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pedineComboBoxActionPerformed

    private void nomeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton annullaButton;
    private javax.swing.JButton inserisciGiocatoreButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField nomeTextField;
    private javax.swing.JComboBox<String> pedineComboBox;
    // End of variables declaration//GEN-END:variables

    private void handleAnnullaButton(){
        actualFrame.dispose();
    }

    private void handleInserisciButton(GestoreGiocatori gestoreGiocatori){
     
        if(nomeTextField.getText().equals("") || nomeTextField.getText().contains(" ")){
            
            JOptionPane.showMessageDialog(
                    actualFrame,
                    "Input non accettato.",
                    "Errore",
                    JOptionPane.ERROR_MESSAGE
            );
   
        }else{
        
            String selectedPedina = pedineComboBox.getSelectedItem().toString();
            
            if(gestorePedine.getPedine().get(selectedPedina).getIsTaken()==true){
                JOptionPane.showMessageDialog(
                        actualFrame,
                        "Pedina gi√† utilizzata",
                        "Errore",
                        JOptionPane.ERROR_MESSAGE
                );
            } else {
            
                Giocatore giocatore = new Giocatore(nomeTextField.getText(),gestorePedine.getPedine().get(selectedPedina));
                gestorePedine.getPedine().get(selectedPedina).setIsTaken(true);

                boolean added = gestoreGiocatori.aggiungiGiocatore(giocatore);

                if(!added) {
                    JOptionPane.showMessageDialog(
                            actualFrame,
                            "Capienza massima di inserimento superata.",
                            "Errore",
                            JOptionPane.ERROR_MESSAGE
                    );
                    actualFrame.dispose();
                } else {
                    JOptionPane.showMessageDialog(
                            actualFrame,
                            "Giocatore inserito correttamente",
                            "Info",
                            JOptionPane.INFORMATION_MESSAGE
                    );
                    actualFrame.dispose();
                }
            }
        }
    }
}
